[{"C:\\Users\\User\\Desktop\\todoip\\src\\index.js":"1","C:\\Users\\User\\Desktop\\todoip\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\todoip\\src\\App.js":"3","C:\\Users\\User\\Desktop\\todoip\\src\\components\\Main.js":"4","C:\\Users\\User\\Desktop\\todoip\\src\\components\\Home\\index.js":"5","C:\\Users\\User\\Desktop\\todoip\\src\\components\\Login\\index.js":"6","C:\\Users\\User\\Desktop\\todoip\\src\\config\\index.js":"7","C:\\Users\\User\\Desktop\\todoip\\src\\components\\RenderTodo\\index.js":"8"},{"size":682,"mtime":1609919493708,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609919499259,"results":"11","hashOfConfig":"10"},{"size":148,"mtime":1609919483031,"results":"12","hashOfConfig":"10"},{"size":348,"mtime":1609907857000,"results":"13","hashOfConfig":"10"},{"size":2487,"mtime":1609997670681,"results":"14","hashOfConfig":"10"},{"size":3064,"mtime":1609922345065,"results":"15","hashOfConfig":"10"},{"size":47,"mtime":1609918991462,"results":"16","hashOfConfig":"10"},{"size":1128,"mtime":1609998210394,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e7jn8d",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\todoip\\src\\index.js",[],["37","38"],"C:\\Users\\User\\Desktop\\todoip\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\todoip\\src\\App.js",[],"C:\\Users\\User\\Desktop\\todoip\\src\\components\\Main.js",[],"C:\\Users\\User\\Desktop\\todoip\\src\\components\\Home\\index.js",["39","40"],"import React, {useState, useEffect} from 'react'\nimport { API } from '../../config'\nimport RenderTodo from '../RenderTodo'\n\nexport default function Home(props) {\n    const [todoInput, setToDoInput] =useState('')\n    const [data, setData] = useState(null)\n\n    useEffect(()=>{\n        let token = localStorage.getItem('token')\n        if(token == null){\n            props.history.push('/login')\n        }else{\n            getAllTodos()\n        }\n    },[])\n    const logOut=()=>{\n        localStorage.removeItem('token', ' ')\n        props.history.push('/login')\n    }\n\n    const getAllTodos=async()=>{\n        let token = localStorage.getItem('token')\n        try{\n            let resp = await fetch (API,{\n                method:'GET',\n                headers:{\n                    \"Content-Type\" : \"application/json\",\n                    Authorization:'token '+ token\n                }\n            })\n            let json = await resp.json()\n\n            setData(json)\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    const createTodo = async()=>{\n        let id = localStorage.getItem('id')\n        let token = localStorage.getItem('token')\n        let data = {\n            author:id,\n            title:todoInput,\n            body:todoInput\n        }\n        try{\n            let resp = await fetch(API,{\n                method:'POST',\n                body:JSON.stringify(data),\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    Authorization:'token ' + token\n                }\n            })\n            let json = await resp.json()\n            setToDoInput('')\n            getAllTodos()\n        }catch(error){\n            console.log(error)\n        }\n    }\n    return (\n        <div>\n            <h1>Home</h1>\n            <p onClick={logOut}\n                style={{width:'50px',height:'50px',color:'red'}}\n            >Выйти</p>\n            <div>\n                <input\n                    type=\"text\"\n                    value={todoInput}\n                    onChange={(event)=>{\n                        setToDoInput(event.target.value)\n                    }}\n                    placeholder='todo'\n                />\n                <button onClick={()=>{\n                    createTodo()\n                }}>ADD</button>\n\n                <div>\n\n                    <RenderTodo\n                        data={data}\n                    />\n\n                </div>\n\n            </div>\n        </div>\n    )\n}","C:\\Users\\User\\Desktop\\todoip\\src\\components\\Login\\index.js",["41","42","43"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { API } from '../../config'\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nexport default function Login(props) {\n    const classes = useStyles();\n    const [h, setH] = useState('Войти')\n    const [p, setP] = useState('Зарегистрироваться')\n    const [login, setLogin] = useState('')\n    const [pass, setPass] = useState('')\n    const [authOrReg, setAuthOrReg] = useState('/login/')\n    \n    useEffect(()=>{\n        let token = localStorage.getItem('token')\n        if(token != null){\n            props.history.push('/')\n        }\n    })\n\n    const setParameters =()=>{\n        if(authOrReg == '/login/'){\n            setH('Регистрация')\n            setAuthOrReg('/registration/')\n            setP('Войти')\n        }else{\n            setH('Войти')\n            setAuthOrReg('/login/')\n            setP('Зарегистрироваться')\n        }\n        \n    }\n\n    const sendRequest = (e) =>{\n        let val = e.target.value\n        let data = {}\n        if(val == '/login/'){\n            data['username']=login\n            data['password']=pass\n        }else{\n            data['username']=login\n            data['password1']=pass\n            data['password2']=pass\n        }\n        let url = 'dj-rest-auth'+val\n        const requset = axios.post(API+url, data)\n        .then((response)=>{\n            console.log(response)\n            localStorage.setItem('token', response.data.key)\n            localStorage.setItem('id', response.data.user.id)\n            props.history.push('/')\n        },(error)=>{\n            console.log(error)\n        })\n    }\n    return (\n        <div className='wrapper'>\n            <div className=\"card\">\n                <h2>{h}</h2>\n                <input \n                    type=\"text\"\n                    placeholder=\"login\"\n                    value={login}\n                    onChange={(event)=>{\n                        setLogin(event.target.value)\n                    }}\n                />\n                <input \n                    type=\"password\"\n                    placeholder='password'\n                    value={pass}\n                    onChange={(event)=>{\n                        setPass(event.target.value)\n                    }}\n                    />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<ExitToAppIcon />}\n                    value={authOrReg}\n                    onClick={(event)=>{\n                        sendRequest(event)\n                    }}\n                >\n                    Войти\n                </Button>\n                <p onClick={setParameters}>{p}</p>\n            </div>\n        </div>\n    )\n}\n","C:\\Users\\User\\Desktop\\todoip\\src\\config\\index.js",[],"C:\\Users\\User\\Desktop\\todoip\\src\\components\\RenderTodo\\index.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":16,"column":7,"nodeType":"50","endLine":16,"endColumn":9,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":57,"column":17,"nodeType":"54","messageId":"55","endLine":57,"endColumn":21},{"ruleId":"56","severity":1,"message":"57","line":30,"column":22,"nodeType":"58","messageId":"59","endLine":30,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":45,"column":16,"nodeType":"58","messageId":"59","endLine":45,"endColumn":18},{"ruleId":"52","severity":1,"message":"60","line":54,"column":15,"nodeType":"54","messageId":"55","endLine":54,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-unused-vars","'json' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'requset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [props.history]",{"range":"66","text":"67"},[451,453],"[props.history]"]